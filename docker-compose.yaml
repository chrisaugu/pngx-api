services:
  healthcheck:
    test:
      ["CMD-SHELL", "curl -f http://localhost:${PORT:-5000}/health || exit 1"]
    interval: 10s
    timeout: 5s
    retries: 3

  nuku-api:
    container_name: nuku-api
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "5000:5000"
    # depends_on:
    #   - nuku-redis
    # - nuku-mongodb
    # - nuku-worker
    restart: always
    networks:
      - nuku-api-network

  # nuku-worker:
  #   build: .
  #     # context: ./nuku-redis-worker
  #   dockerfile: ./Dockerfile
  #   command: ["node", "worker.js"]
  #   restart: always
  #   depends_on:
  #     - nuku-redis

  # nuku-etl:
  #   container_name: nuku-etl
  #   build:
  #     context: .
  #     dockerfile: etl.Dockerfile
  #   depends_on:
  #     - nuku-mongodb
  #   networks:
  #     - nuku-api-network

  # nuku-stock-publisher:
  #   container_name: nuku-stock-publisher
  #   build:
  #     context: .
  #     dockerfile: publisher.Dockerfile
  #   depends_on:
  #     - nuku-redis
  #   networks:
  #     - nuku-api-network

  # nuku-price-consumer-service:
  #   depends_on:
  #     - nuku-redis
#   nuku-redis:
#     # image: redis
#     image: redis:7.2.4-alpine
#     ports:
#       - "6379:6379"
#     networks:
#       - nuku-api-network
#     restart: always
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]

#   nuku-mongodb:
#     image: mongo
#     ports:
#       - '27017:27017'
#     volumes:
#       - nuku-storage:/data/db
#     networks:
#       - nuku-api-network

#   db:
#     restart: always
#     image: postgres
#     ports:
#       - "5432:5432"
#     environment:
#       - POSTGRES_USER=mastodon
#       - POSTGRES_PASSWORD=mastodon
#       - POSTGRES_DB=mastodon
#       - POSTGRES_HOST_AUTH_METHOD=trust
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "postgres"]

#   redis:
#     restart: always
#     image: redis
#     ports:
#       - "6379:6379"
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]

# volumes:
#   nuku-storage:

# networks:
#   nuku-api-network:
#     driver: bridge
